#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<netapp_api_bridges:sep(9)>>>
# status ok


def inventory_netapp_api_bridges(parsed):
    for bridge in parsed.keys():
        yield bridge, {}


def check_netapp_api_bridges(item, _no_params, parsed):
    data = parsed.get(item, {})

    if data.get("status"):
        state = 0 if data["status"].lower() in ["ok", "ok-with-suppressed", "ok_with_suppressed"
                                               ] else 2
        yield state, "Status: %s" % data["status"]


check_info["netapp_api_bridges"] = {
    'check_function': check_netapp_api_bridges,
    'inventory_function': inventory_netapp_api_bridges,
    'parse_function': lambda x: netapp_api_parse_lines(x),
    'service_description': 'Bridge %s',
    'includes': ["netapp_api.include"],
}

