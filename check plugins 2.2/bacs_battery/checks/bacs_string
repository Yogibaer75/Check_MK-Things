#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

factory_settings["bacs_string_default_levels"] = {
    "levels": (55, 60),
    "voltage": (14, 15),
    "voltage_lower": (10, 9),
    "temp": (40, 50),
    "temp_lower": (10, 5),
    "resistance": (15, 18),
}


def parse_bacs_string(info):
    scale = 100.0
    parsed = {}
    for i in info:
        parsed[i[0]] = {
            "power": int(i[1]) / scale,
            "overall": int(i[2]) / scale,
            "average": int(i[3]) / scale,
        }
    return parsed


def inventory_bacs_string(parsed):
    for item in parsed:
        yield item, {}


def check_bacs_string(item, params, parsed):
    if isinstance(params, tuple):
        params = {"levels": params}

    params_temp = {}
    if "temp" in params:
        params_temp["levels"] = params["temp"]
    if "levels" in params:
        params_temp["levels"] = params["levels"]
    if "temp_lower" in params:
        params_temp["levels_lower"] = params["temp_lower"]

    perfdata = []
    if item in parsed:
        data = parsed[item]
        power = data["power"]
        overall = data["overall"]
        average = data["average"]
        perfdata = [
            ("voltage", float(overall)),
            ("power", float(power)),
            ("avg_volt", float(average)),
        ]
        yield 0, f"String {item} - {overall} Voltage - {power} Power - {average} Average Voltage", perfdata
        res_status = 0
        if power > 0:
            res_status = 1
            yield res_status, "(warn Battery Power over 0)"


check_info["bacs_string"] = {
    "check_function": check_bacs_string,
    "inventory_function": inventory_bacs_string,
    "parse_function": parse_bacs_string,
    "service_description": "BACS String %s",
    "default_levels_variable": "bacs_string_default_levels",
    "has_perfdata": True,  # optional if available
    "snmp_scan_function": lambda oid: ".1.3.6.1.2.1.33" in oid(".1.3.6.1.2.1.1.2.0"),
    "snmp_info": (
        ".1.3.6.1.2.1.33.5.2.7.1",
        [
            1,  # string index
            2,  # string power
            3,  # string overall voltage
            4,  # string average voltage
        ],
    ),
}
