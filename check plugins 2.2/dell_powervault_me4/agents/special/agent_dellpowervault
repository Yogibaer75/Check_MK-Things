#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-

import sys
import requests
import hashlib
import argparse
import urllib3
import cmk.utils.password_store

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

cmk.utils.password_store.replace_passwords()

commands = ("controllers", "disks", "system", "sensor-status",
            "power-supplies", "frus", "fans", "volumes", "pools",
            "controller-statistics", "volume-statistics", "ports")


def parse_arguments(argv):
    parser = argparse.ArgumentParser(description=__doc__)

    # flags
    parser.add_argument("-v",
                        "--verbose",
                        action="count",
                        help="""Increase verbosity""")
    parser.add_argument(
        "--debug",
        action="store_true",
        help="""Debug mode: let Python exceptions come through""")

    parser.add_argument("hostaddress", help="DELL EMC PowerVault host name")
    parser.add_argument("-u",
                        "--username",
                        required=True,
                        help="DELL EMC user name")
    parser.add_argument("-p",
                        "--password",
                        required=True,
                        help="DELL EMC user password")

    args = parser.parse_args(argv)
    return args


def main(argv=None):
    args = parse_arguments(argv or sys.argv[1:])

    url = "https://" + args.hostaddress
    auth_string = hashlib.sha256("{}_{}".format(
        args.username, args.password).encode("utf-8")).hexdigest()

    s = requests.session()
    s.headers.update({"datatype": "json"})
    r = s.get(url + "/api/login/" + auth_string, verify=False, timeout=5)
    sessionKey = r.json()["status"][0]["response"]
    s.headers.update({"sessionKey": sessionKey})

    for element in commands:
        response = s.get(url + "/api/show/" + element, timeout=5)
        print("<<<dell_powervault_me4_{}:sep(0)>>>".format(
            element.replace("-", "_")))
        print(response.json())

    return 0


if __name__ == "__main__":
    sys.exit(main())
