#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

factory_settings["fortigate_update_default_levels"] = {
    "levels": (30, 90),
}


def parse_fortigate_update(info):
    fields = [
        "component",
        "license",
        "version",
        "last_update",
        "update_typ",
        "last_contact",
        "last_result",
    ]
    parsed = {}
    for line in info:
        parsed[line[0]] = {fields[i]: line[i] for i in range(len(fields))}

    return parsed


def inventory_fortigate_update(parsed):
    for key in parsed:
        if parsed[key]["license"] != "n/a":
            yield key, {}


@get_parsed_item_data
def check_fortigate_update(item, params, data):
    def parse_date(value):
        if value == "n/a":
            return 0, time.time()
        t = time.strptime(value, "%a %b %d %H:%M:%S %Y")
        ts = time.mktime(t)
        return ts, time.time() - ts

    warn, crit = params["levels"]
    update, update_age = parse_date(data["last_update"])
    message = "Last update %s" % get_timestamp_human_readable(update)
    contact, _contact_diff = parse_date(data["last_contact"])
    if data["update_typ"] == "manual":
        update_typ = "manual (!)"
    else:
        update_typ = data["update_typ"]

    addon_msg = " Update typ: %s - Version: %s - Last contact: %s - Last result: %s" % (
        update_typ,
        data["version"],
        get_timestamp_human_readable(contact),
        data["last_result"],
    )

    if params.get("no_levels"):
        return 0, message + " no Levels (!)" + addon_msg

    if update_age > crit * 3600 * 24:
        message += " (Warn/Crit: %s/%s)" % (
            get_age_human_readable(warn * 3600 * 24),
            get_age_human_readable(crit * 3600 * 24),
        )
        return 2, message + addon_msg
    elif update_age > warn * 3600 * 24:
        message += " (Warn/Crit: %s/%s)" % (
            get_age_human_readable(warn * 3600 * 24),
            get_age_human_readable(crit * 3600 * 24),
        )
        return 1, message + addon_msg
    else:
        return 0, message + addon_msg


check_info["fortigate_update"] = {
    "check_function": check_fortigate_update,
    "inventory_function": inventory_fortigate_update,
    "parse_function": parse_fortigate_update,
    "service_description": "Component %s",
    "default_levels_variable": "fortigate_update_default_levels",
    "group": "fortigate_update",
    "snmp_scan_function": lambda oid: ".1.3.6.1.4.1.12356.101.1"
    in oid(".1.3.6.1.2.1.1.2.0"),
    "snmp_info": (
        ".1.3.6.1.4.1.12356.101.4.6.3.2.2.1",
        [
            1,  # suboid number one inside table
            2,  # suboid number two inside table
            3,
            4,
            5,
            6,
            7,
        ],
    ),
}
