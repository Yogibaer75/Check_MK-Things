#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-


def inventory_lenovo_xcc_network(info):
    for line in info:
        yield line[0], ({"status": line[2]})


def check_lenovo_xcc_network(item, params, info):
    lenovo_xcc_network_status_codes = {
        "Normal": (0, "normal"),
        "DOWN": (1, "down"),
        "UP": (0, "up"),
        "NONSUPPORT": (1, "nonsupport"),
        "UNKNOWN": (3, "unknown"),
    }

    needed_state = params.get("status", "UNKNOWN")

    for line in info:
        if line[0] == item:
            status_txt = ""
            status, name = lenovo_xcc_network_status_codes.get(
                line[2], (2, "not normal")
            )
            if needed_state == line[2]:
                status = 0
            else:
                status = max(status, 1)
                status_txt = " - Interface status changed(!)"
            return (
                status,
                "Interface status is %s - nominal speed %s - actual speed %s%s"
                % (name, line[1], line[3], status_txt),
            )


check_info["lenovo_xcc_network"] = {
    "check_function": check_lenovo_xcc_network,
    "inventory_function": inventory_lenovo_xcc_network,
    "service_description": "Interface %s",
    "snmp_scan_function": lambda oid: ".1.3.6.1.4.1.19046.11.1"
    in oid(".1.3.6.1.2.1.1.2.0"),
    "snmp_info": (
        ".1.3.6.1.4.1.19046.11.1.1.14.4.1",
        [
            2,  # adapterNetworkPortNetworkVPDProdName
            12,  # adapterNetworkPortMaxSpeed
            20,  # adapterNetworkPortPhyPortLinkStatus
            21,  # adapterNetworkPortPhyPortLinkSpeed
        ],
    ),
}
