#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from cmk.base.check_legacy_includes.temperature import *
from cmk.base.check_legacy_includes.hp_proliant import *

# (c) 2020 
# Andreas Doehler <andreas.doehler@bechtle.com/andreas.doehler@gmail.com>

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#<<<ilo_api_temp:sep(124)>>>
#01-Inlet Ambient|21|Celsius|42|47|Enabled|OK
#Name | Value | Unit | warn | crit | State | Health

def inventory_ilo_api_temp(info):
    for line in info:
        if line[6] != "NP":
            yield line[0], {}

def check_ilo_api_temp(item, params, info):
    for line in info:
        if line[0] == item:
            if line[6] != "NP":
                name, value, unit, warn, crit, status_name, status = line
                devlevels = (float(warn), float(crit))
                snmp_status = line[6].lower()
    
                return check_temperature(float(value), params, "ilo_api_temp_%s" % item,
                        dev_levels=devlevels,
                        dev_status=hp_proliant_status2nagios_map[snmp_status],
                        dev_status_name="Unit: %s" % snmp_status)
    return 3, "item not found in snmp data"

check_info["ilo_api_temp"] = {
    'check_function'     : check_ilo_api_temp,
    'inventory_function' : inventory_ilo_api_temp,
    'service_description': 'Temperature %s',
    'has_perfdata'       : True,
    'group'              : 'temperature',
}
