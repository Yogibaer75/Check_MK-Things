#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) Andreas Doehler <andreas.doehler@bechtle.com/andreas.doehler@gmail.com>

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings["apc_pdu_default_levels"] = {
    "level_watts": (3000.0, 3700.0), 
    "level_va": (3000.0, 3700.0),
}

def inventory_apc_pdu(info):
    if len(info) > 0:
        yield None, {}


def check_apc_pdu(item, params, info):
    warn_watt, crit_watt = params.get("level_watts", (None, None))
    warn_va, crit_va = params.get("level_va", (None, None))
    pdu, watt, power = info[0]
    watt = float(watt)
    power = float(power)
    yield 0, "PDU: %s" % pdu
    yield check_levels(watt, "Watt", (warn_watt, crit_watt), unit="watt", human_readable_func=int)
    yield check_levels(power, "VA", (warn_va, crit_va), unit="VA", human_readable_func=int)


check_info['apc_pdu'] = {
    'check_function': check_apc_pdu,
    'inventory_function': inventory_apc_pdu,
    'has_perfdata': True,
    'snmp_scan_function': lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.318.1.3.4.6"),
    'service_description': 'APC PDU Device Load',
    'snmp_info': ('.1.3.6.1.4.1.318.1.1.12.1', [1, 16, 18]),
    'default_levels_variable': 'apc_pdu_default_levels',
    'group': 'apc_pdu',
}
