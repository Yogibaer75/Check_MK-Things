#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) Andreas Doehler <andreas.doehler@bechtle.com/andreas.doehler@gmail.com>

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def parse_prism_host_usage(info):
    import ast
    parsed = {}
    parsed = ast.literal_eval(info[0][0])

    return parsed

def inventory_prism_host_usage(parsed):
    if "storage.capacity_bytes" in parsed:
        return [("Capacity",None)]


def check_prism_host_usage(item, params, data):
    total_sas = float(data.get("storage_tier.das-sata.capacity_bytes", 0))
    free_sas = float(data.get("storage_tier.das-sata.free_bytes", 0))
    total_ssd = float(data.get("storage_tier.ssd.capacity_bytes", 0))
    free_ssd = float(data.get("storage_tier.ssd.free_bytes", 0))
    total_bytes = float(data.get("storage.capacity_bytes", 0)) / 1024 / 1024
    free_bytes = float(data.get("storage.free_bytes", 0)) / 1024 / 1024

    yield df_check_filesystem_list(item, params,
                   [(item, total_bytes, free_bytes, 0)])

    yield 0, "Total SAS: %s, Free SAS: %s" % (get_bytes_human_readable(total_sas),
                                              get_bytes_human_readable(free_sas))

    yield 0, "Total SSD: %s, Free SSD: %s" % (get_bytes_human_readable(total_ssd),
                                              get_bytes_human_readable(free_ssd))


check_info["prism_host_usage"] = {
    "parse_function": parse_prism_host_usage,
    "check_function": check_prism_host_usage,
    "inventory_function": inventory_prism_host_usage,
    "has_perfdata": True,
    "group": "filesystem",
    "service_description": "NTX Storage %s",
    "includes": ["size_trend.include", "df.include"]
}
