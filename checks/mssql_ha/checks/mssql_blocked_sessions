#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
#
# session_id, wait_duration_ms, wait_type, blocking_session_id
# <<<mssql_blocked_sessions>>>
# Blocked _Sessions
# 119 232292187 LCK_M_U 75
# 76 221526672 LCK_M_U 115

# TODO: Make this check aware of multiple instances! Don't handle the blocked
# sessions independent of instances anymore. Use same service description
# schema as "mssql_instance".

factory_settings['mssql_blocked_sessions_default_levels'] = {
        'state' : 2,
}

def inventory_mssql_blocked_sessions(info):
    return [(None, {})]

def check_mssql_blocked_sessions(_no_item, params, info):
    if not info:
        yield 0, "No blocked sessions"
        return

    state = params['state']

    ignored_waittypes = set()
    for line in info:
        if "blocked" in line[0].lower():
            continue # Skip debug output which was send by old agent by accident

        session_id, wait_duration_ms, wait_type, blocking_session_id = line

        if wait_type in params.get("ignore_waittypes", []):
            ignored_waittypes.add(wait_type)
            continue

        if params.has_key('waittime'):
            warn, crit = params['waittime']
            wait_duration_sec = float(wait_duration_ms) / 1000
            if wait_duration_sec >= crit:
                state = 2
            elif wait_duration_sec >= warn:
                state = 1
            else:
                state = 0

        yield state, "Session %s blocked by %s (Wait %s ms, Type: %s)" % \
              (session_id, blocking_session_id, wait_duration_ms, wait_type)

    if ignored_waittypes:
        yield 0, "Ignored wait types: %s" % ", ".join(ignored_waittypes)


check_info['mssql_blocked_sessions'] = {
    'inventory_function'        : inventory_mssql_blocked_sessions,
    'check_function'            : check_mssql_blocked_sessions,
    'service_description'       : 'MSSQL Blocked Sessions',
    'group'                     : 'mssql_blocked_sessions',
    'default_levels_variable'   : 'mssql_blocked_sessions_default_levels',
}
