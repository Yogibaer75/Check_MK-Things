#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

mssql_config_map = {
        "clr_enabled" : "0",
        "cross_db_ownership_chaining" : "0",
        "xp_cmdshell" : "0",
        "sa_disabled" : "True",
        "builtin_sysadmin" : "disabled",
        "audit_level" : "2",
        "encryption" : "True",
        "trustworthy" : "False",
        "guestaccess" : "0",
}


def mssql_config_item(line, add_counter_name):
    if len(line) < 3:
        return None

    instance, counter = line[:2]

    if add_counter_name:
        return instance + ' Config ' + counter
    else:
        return instance

def inventory_mssql_config(info, want_counters, add_counter_name):
    inventory = []
    for line in info:
        if line[1] in want_counters:
            this_counter = line[1]
            inventory.append((mssql_config_item(line, add_counter_name), None))
        # check for trustworthy - encryption - guestaccess
        checktype = line[1].split("_")[0]
        if checktype in want_counters:
            this_counter = line[1]
            inventory.append((mssql_config_item(line, add_counter_name), None))
    return inventory


def check_mssql_config(item, params, info):
    counter_name = None
    value = None
    base  = None

    for line in info:
        if mssql_config_item(line, True) == item:
            value        = line[2]
            counter_name = line[1]

    if value is None:
        raise MKCounterWrapped("No data from database")

    state = 3
    if counter_name != None:
        if counter_name.startswith('trustworthy_') or counter_name.startswith('encryption_') or counter_name.startswith('guestaccess_'):
            dbname =  counter_name.split("_")[1]
            counter_name = counter_name.split("_")[0]
        base = mssql_config_map[counter_name]
        if counter_name == "trustworthy" and dbname == "msdb":
            state = 0
        elif counter_name == "encryption" and (dbname == "master" or dbname == "model" or dbname == "msdb" or dbname == "tempdb"):
            state = 0
        elif counter_name == "guestaccess" and (dbname == "master" or dbname == "msdb"):
            state = 0

        if base == value:
            state = 0
        elif state != 0:
            state = 2

        return (state, 'Configuration with %s value' % (value))
    return (state, 'Configuration not found in data')

check_info['mssql_config'] = {
    'check_function':      check_mssql_config,
    'inventory_function':  lambda info: inventory_mssql_config(info,
        ['builtin_sysadmin', 'cross_db_ownership_chaining', 'clr_enabled', 'xp_cmdshell', 'sa_disabled', 'audit_level', 'trustworthy', 'encryption', 'guestaccess'], True),
    'service_description': "%s",
    'has_perfdata':        False,
}

