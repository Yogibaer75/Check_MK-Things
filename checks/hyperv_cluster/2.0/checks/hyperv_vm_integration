#!/usr/bin/python
# # -*- encoding: utf-8; py-indent-offset: 4 -*-

#.
#   .--Integration---------------------------------------------------------.
#   |     ___       _                       _   _                          |
#   |    |_ _|_ __ | |_ ___  __ _ _ __ __ _| |_(_) ___  _ __               |
#   |     | || '_ \| __/ _ \/ _` | '__/ _` | __| |/ _ \| '_ \              |
#   |     | || | | | ||  __/ (_| | | | (_| | |_| | (_) | | | |             |
#   |    |___|_| |_|\__\___|\__, |_|  \__,_|\__|_|\___/|_| |_|             |
#   |                       |___/                                          |
#   '----------------------------------------------------------------------'
#   |                                                                      |
#   '----------------------------------------------------------------------'


factory_settings["hyperv_vm_integration_default_levels"] = {
        'default_status': 'active', 
        'match_services': [('Guest Service Interface','inactive')],
}


def inventory_hyperv_vm_integration(parsed):
    for i in parsed.keys():
        yield i, None


def check_hyperv_vm_integration(item, params, parsed):
    is_state = {
        "active" : 0,
        "inactive" : 1,
    }

    if item in parsed.keys():
        data = parsed.get(item)
        yield 0, "%s - %s - %s" % (data["name"],data["enabled"],data["primary"])


check_info['hyperv_vm_integration'] = {
    "inventory_function": inventory_hyperv_vm_integration,
    "check_function": check_hyperv_vm_integration,
    "parse_function": lambda info: parse_hyperv_single(info, key="name"),
    "service_description": "HyperV Intergration %s",
    "includes": ["hyperv.include"],
    "default_levels_variable": "hyperv_vm_integration_default_levels",
    "group": "hyperv_vm_integration",
}
